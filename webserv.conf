# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    webserv.conf                                       :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: fde-capu <fde-capu@student.42sp.org.br>    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/02/09 20:09:45 by fde-capu          #+#    #+#              #
#    Updated: 2022/02/18 09:09:40 by fde-capu         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# Needed by nginx, not implemented and ignored by webserv.

events {}

# Everything works nested.

http {

# Will allways reply as Connection:close.
# Accepted, although ignored by webserv (its default non-blocking behavior).

	keepalive_timeout 0;

# From: https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
# Syntax:		client_max_body_size size;
# Default:	client_max_body_size 1m;
# Context:	http, server, location
# Sets the maximum allowed size of the client request body. If the size in a
# request exceeds the configured value, the 413 (Request Entity Too Large)
# error is returned to the client. Please be aware that browsers cannot
# correctly display this error. Setting size to 0 disables checking of
# client request body size.

#	Disable Entity Tags (nginx only):

	etag off;

#	Tell nginx to serve not only .html files as text/html.
	types
	{
		text/html html htm;
	}

# Able to limit client max_body_size:

#	client_max_body_size 50M;

#################################################################

	server
	{
		listen 3490;
		server_name localhost;

		location /
		{
			root html;
			index index.html index.htm;
			autoindex on;
		}

		location ~ \.php$
		{
#			return 200;
#			try_files		$uri =404;
			root			html;
#			fastcgi_pass	"0.0.0.0:9000";
#			fastcgi_index	index.php;

#			include			conf/fastcgi_params;
			include			conf/fastcgi.conf;
#			fastcgi_param	REQUEST_METHOD $request_method;
#			fastcgi_param	SCRIPT_FILENAME fastcgi_script_name;

#			fastcgi_param	SCRIPT_NAME php;
#			fastcgi_index  index.php;
		}
	}

#################################################################

#	First server of localhost:3490 is above, so this is ignored.
#	Conflicting name:port generates ignore warning on nginx startup.

	server
	{
		listen		3490;
		location /
		{
			root	bad_folder;
		}
	}

#################################################################

#	Identify the server block trough server_name.
#	Client must decipt Host header.
#	This also demonstrates that the absence of index defaults to html/htm.

	server
	{
		listen		3490;
		server_name	krazything;
		location /
		{
			root	html-custom-server-name;
		}
	}

#################################################################

	server
	{
		listen		3491;

#		set server_names (or not);
		server_name	localhostB3491;

		location /
		{
			root   htmlB3491;
			index  index.html index.htm;

##			list of accepted methods. Optional (*)
#			if ( $request_method !~ ^(GET)$ ) { return 405; }
		}
	}

#################################################################

	server
	{
		listen		3492;

#		No "location" nor "redirect", so it is forbidden 403.
#		"set server_name" or not, default = "";
#		server_name localhost-blabla; (commented on purpose)
#		nginx throws error.log:

#		2022/02/16 14:17:04 [error] 416#0: *6 directory index of
#		"/home/coder/webserv/nginx-standalone/sandbox/html/" is
#		forbidden, client: 127.0.0.1, server: , request:
#		"GET / HTTP/1.1", host: "127.0.0.1:3492"

	}

#################################################################

	server
	{
		listen		3493;

#		multiple server_name; free-bonus.
		server_name	local-redirect localhost;

#		optional redirect (*)
		return 301 http://localhost:3490/;
	}

#################################################################
# Demonstrate max_body_size blocking. Large uploads.
# Demo also this:
#	if ( $request_method !~ ^(DELETE)$ ) { return 405; }
#	if ( $request_method !~ ^(GET|POST|DELETE)$ ) { return 405; } # default on nginx
# Directive to setup upload location.

##		error pages (must have defaults if ommited).
#		error_page   500 502 503 504  /50x.html;
##		setup is optional (*)
#		location = /50x.html {
#			root   html;
#		}

#################################################################

	server
	{
		listen 4242;
		root html4242;

		location ~ /directory(.*)
		{
			return 301 /YoupiBanane$1;
		}

		location = /YoupiBanane/Yeah/
		{
			return 404; # ubuntu_tester asks for this (default would be 403 Forbidden).
		}

		location ~ /YoupiBanane
		{
			index youpi.bad_extension; 
			location ~ \.bla$
			{
#				client_max_body_size 5M;
				fastcgi_pass	127.0.0.1:9000;
				return 204;
			}
		}

		location ~ /post_body
		{
			sendfile on;
			client_max_body_size 5M;
			if ( $request_method !~ ^(POST)$ ) { return 405; }
		}

		location /
		{
			root html4242;
			index index.html index.html;
			autoindex on;
			if ( $request_method !~ ^(GET)$ ) { return 405; }
		}

##		CGI, (bonus > 1, mandatory must be perfect). (*)
#		location \.bla$
#		{
##			Answers POST (only?)
##			rewrite directory /YoupiBanane;
#			root			html4242;
#			include			conf/fastcgi_params;
#			fastcgi_pass	127.0.0.1:9000;
#			fastcgi_index	index.php;
#			fastcgi_param	SCRIPT_FILENAME /cgi_tester;
#		}

		location /put_test/ # Not required nor working (nginx fix).
		{
			if ( $request_method !~ ^(PUT)$ ) { return 405; }
			return 200;
		}

	}

}
