# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    nginx-as-webserv.conf                              :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: fde-capu <fde-capu@student.42sp.org.br>    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/05/20 19:39:02 by fde-capu          #+#    #+#              #
#    Updated: 2022/05/23 18:04:06 by fde-capu         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# Needed by nginx, not implemented.
events {}

http {

#	Tell nginx to allways reply as Connection:close.
#	webserv defaults to non-blocking behavior.
	keepalive_timeout 0;

#	Disable Entity Tags to keep a clean header:
	etag off;

#	Tell nginx to serve everything as text/html.
	types
	{
		text/html html htm;
	}

# Able to limit client max_body_size:
# From: https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
# Syntax:		client_max_body_size size;
# Default:	client_max_body_size 1m;
# Context:	http, server, location
# Sets the maximum allowed size of the client request body. If the size in a
# request exceeds the configured value, the 413 (Request Entity Too Large)
# error is returned to the client. Please be aware that browsers cannot
# correctly display this error. Setting size to 0 disables checking of
# client request body size.

#	client_max_body_size 50M;

#################################################################

	server
	{
		listen 3490;
		server_name localhost;

		location ~ \.php$
		{
			return 200;
#			try_files		$uri =404;
#			root			html;
#			fastcgi_param	REQUEST_METHOD $request_method;
#			include			conf/fastcgi_params;
#			fastcgi_pass	127.0.0.1:9000;
#			fastcgi_index	index.php;

#			include			conf/fastcgi.conf;
#			fastcgi_param	SCRIPT_FILENAME fastcgi_script_name;

#			fastcgi_param	SCRIPT_NAME php;
#			fastcgi_index  index.php;
		}

		location /
		{
			root html;
			index index.html index.htm;
			autoindex on;
		}
	}

#################################################################

#	First server of localhost:3490 is above, so this is ignored.
#	Conflicting name:port generates ignore warning on nginx startup.

	server
	{
		listen		3490;
		location /
		{
			root	bad_folder;
		}
	}

#################################################################

#	Identify the server block trough server_name.
#	Client must decipt Host header.
#	This also demonstrates that the absence of index defaults to html/htm.

	server
	{
		listen		3490;
		server_name	krazything;
		location /
		{
			root	html-custom-server-name;
		}
	}

#################################################################

	server
	{
		listen		3491;
		server_name	localhostB3491;
		location /
		{
			root   htmlB3491;
			index  index.html index.htm;
		}
	}

#################################################################

#	This is THE minimal server.
#	No "location" nor "redirect", so it is forbidden 403.

	server
	{
		listen		3492;
	}

#################################################################

	server
	{
		listen		3493;

#			? must be inside location ?
##		list of accepted methods. (*) <- Asterisk will indicate optionals.
#		if ( $request_method !~ ^(GET)$ ) { return 405; }

#		multiple server_name; free-bonus. (*)
		server_name	local-redirect localhost;

#		optional redirect (*)
		return 301 http://localhost:3490/;
	}

#################################################################
# Demonstrate max_body_size blocking. Large uploads.
# Demo also this:
#	if ( $request_method !~ ^(DELETE)$ ) { return 405; }
#	if ( $request_method !~ ^(GET|POST|DELETE)$ ) { return 405; } # default on nginx
# Directive to setup upload location.

##		error pages (must have defaults if ommited).
#		error_page   500 502 503 504  /50x.html;
##		setup is optional (*)
#		location = /50x.html {
#			root   html;
#		}

#################################################################

	server
	{
		listen 4242;
		root html4242;
		server_name	localhost:4242;

#- / must answer to GET request ONLY
		location /
		{
			if ( $request_method !~ ^(GET)$ ) { return 405; }
		}

#- /put_test/* must answer to PUT request and save files to a directory of your choice
		location /put_test/
		{
			if ( $request_method !~ ^(PUT)$ ) { return 405; }
			root uploads;
		}

#  (Sequence out of given order to comply configuration.)
#- /post_body must answer anything to POST request with a maxBody of 100
		location /post_body
		{
			if ( $request_method !~ ^(POST)$ ) { return 405; }
			client_max_body_size 100;
		}

#- /directory/ must answer to GET request and the root of it would be the repository YoupiBanane
#  and if no file are requested, it should search for youpi.bad_extension files
		location ~ /directory
		{
			if ( $request_method !~ ^(GET)$ ) { return 405; }
			rewrite ^/directory(/?.*) /YoupiBanane$1 redirect;
#			return 301 http://$server_name/YoupiBanane$request_uri;
		}

		location /YoupiBanane/Yeah/
		{
			return 404;
		}

		location /YoupiBanane/
		{
			index youpi.bad_extension;
		}

#- any file with .bla as extension must answer to POST request by calling the cgi_test executable
		location ~ \.bla$
		{
			if ( $request_method ~ ^(POST)$ ) { return 301 http://$server_name/ubuntu_cgi_tester; }
		}

		location /ubuntu_cgi_tester
		{
			include conf/fastcgi_params;
			fastcgi_index ubuntu_cgi_tester;
		}

	}

#		client_max_body_size 5M;
#
#		location ~ /directory(.*)
#		{
#			return 301 /YoupiBanane$1;
#		}
#
#		location = /YoupiBanane/Yeah/
#		{
#			return 404; # ubuntu_tester asks for this (default would be 403 Forbidden).
#		}
#
#		location ~ /YoupiBanane
#		{
#			index youpi.bad_extension; 
#			location ~ \.bla$
#			{
#				return 200; # Dummy for nginx.
#			}                        
#		}
#
#		location ~ /post_body
#		{
#			if ( $request_method !~ ^(POST)$ ) { return 405; }
#			return 200; # Dummy for nginx.
#		}
#
#		location /
#		{
#			root html4242;
#			index index.html index.html;
#			autoindex on;
#			if ( $request_method !~ ^(GET)$ ) { return 405; }
#		}
#
###		CGI, (bonus > 1, mandatory must be perfect). (*)
##		location \.bla$
##		{
###			Answers POST (only?)
###			rewrite directory /YoupiBanane;
##			root			html4242;
##			include			conf/fastcgi_params;
##			fastcgi_pass	127.0.0.1:9000;
##			fastcgi_index	index.php;
##			fastcgi_param	SCRIPT_FILENAME /cgi_tester;
##		}
#
#		location /put_test/ # Not required nor working (nginx fix).
#		{
#			if ( $request_method !~ ^(PUT)$ ) { return 405; }
#			return 200;
#		}

}
