# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    42_tester.conf                                     :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: fde-capu <fde-capu@student.42sp.org.br>    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/02/09 20:09:45 by fde-capu          #+#    #+#              #
#    Updated: 2022/02/09 21:48:51 by fde-capu         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# (*) optional = at least one must be done.

events { # needed by nginx, not implemented and ignored by webserv
	worker_connections  1024;
}

http {
	client_max_body_size	200; # able to set max_body_size
#   From: https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
#	Syntax:		client_max_body_size size;
#	Default:	client_max_body_size 1m;
#	Context:	http, server, location
#	Sets the maximum allowed size of the client request body. If the size in a
#	request exceeds the configured value, the 413 (Request Entity Too Large)
#	error is returned to the client. Please be aware that browsers cannot
#	correctly display this error. Setting size to 0 disables checking of
#	client request body size.

		server
		{
			listen					3490;
			server_name				localhost;
			client_max_body_size	100; # client_max_body_size works nested.
			location /
			{ # nginx accept subdirectories. Optional (*).
				root   html;
				index  index.html index.htm; # default file to serve if none given, optional. (*)
				client_max_body_size 50; # client_max_body_size works nested.
#				if ( $request_method !~ ^(GET|POST|DELETE)$ )
#				{ # list of accepted methods, optional (*).
#					return 405;
#				}
#				autoindex on; # Optional on/off (*).
#				nginx accepts upload files? test. mandatory.
#				Directive to setup upload location: Optional (*).
			}

#			error_page   500 502 503 504  /50x.html; # error pages (must have defaults if ommited).
#				location = /50x.html { # setup is optional (*)
#					root   html;
#				}

#			location ~ \.php$ { # Optional 1 CGI, (bonus > 1, mandatory must be perfect). (*)
#				root           html;
#				include        conf/fastcgi_params;
#				fastcgi_pass   127.0.0.1:9000;
#				fastcgi_index  index.php;
#				fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#			}
		}

	server
	{
		listen			4242;
		location /
		{
			root html4242;
			index index.html index.html;
			if ( $request_method !~ ^(GET)$ ) { return 405; }
			autoindex on; # Optional on/off (*).
		}
		location /put_test/*
		{
			if ( $request_method !~ ^(PUT)$ ) { return 405; }
			root html4242/uploads;
		}
		location ~ \.bla$ { # Optional 1 CGI, (bonus > 1, mandatory must be perfect). (*)
			root           html4242;
			include        conf/fastcgi_params;
#			fastcgi_pass   127.0.0.1:9000;
#			fastcgi_index  index.php;
			fastcgi_param  SCRIPT_FILENAME  /cgi_tester;
		}
		location /post_body
		{
			if ( $request_method !~ ^(POST)$ ) { return 405; }
			client_max_body_size	100; # client_max_body_size works nested.
		}
		location /directory/
		{
			if ( $request_method !~ ^(GET)$ ) { return 405; }
			root	html4242/YoupiBanane;
			index	youpi.bad_extension; 
		}
	}

	server
	{
		listen			3491; # set port
		server_name		localhostB3491; # set server_names (or not);
#										even though nginx still accepts as localhost,
#										returns 200 and correct location.
		location /
		{
			root   htmlB3491;
			index  index.html index.htm;
#			if ( $request_method !~ ^(GET)$ )
#			{ # list of accepted methods. Optional (*)
#				return 405;
#			}
		}
	}

	server
	{
		listen 3492; # set port
# server_name	localhost-blabla; # (set server_names) or not, default = localhost;
	}

	server
	{ # first server of localhost:3490 is above, so this is ignored.
		listen       3490;
		server_name  localhost; # conflicting name generates ignore warning on nginx.
	}

	server
	{ # if called as localhostB3491:3490, this should be executed,
		listen		3490; # and not be captured by localhost:3490.
		server_name	localhostB3491; # same name warning.
	}

	server {
		listen		3493;
		server_name	local-redirect localhost; # multiple server_name; free-bonus.
		return 301 http://localhost:3490; # optional (*)
	}
}
