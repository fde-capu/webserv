# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    42_tester.conf                                     :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: fde-capu <fde-capu@student.42sp.org.br>    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/02/09 20:09:45 by fde-capu          #+#    #+#              #
#    Updated: 2022/02/10 02:04:21 by fde-capu         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

# (*) optional = at least one must be done.

events { # needed by nginx, not implemented and ignored by webserv
	worker_connections  1024;
}

http {

#	able to set max_body_size:
	client_max_body_size	200;
#   From: https://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size
#	Syntax:		client_max_body_size size;
#	Default:	client_max_body_size 1m;
#	Context:	http, server, location
#	Sets the maximum allowed size of the client request body. If the size in a
#	request exceeds the configured value, the 413 (Request Entity Too Large)
#	error is returned to the client. Please be aware that browsers cannot
#	correctly display this error. Setting size to 0 disables checking of
#	client request body size.

	server
	{
		listen					3490;
		server_name				localhost;

#		client_max_body_size works nested.
		client_max_body_size	100;

#		nginx accept subdirectories. Optional (*).
		location /
		{
			root   html;

#			default file to serve if none given, optional. (*)
			index  index.html index.htm;

#			client_max_body_size works nested.
			client_max_body_size 50;

#			Optional on/off (*).
			autoindex on;

##			list of accepted methods, optional (*).
#			if ( $request_method !~ ^(GET|POST|DELETE)$ ) { return 405; }

##			nginx accepts upload files? test. mandatory.
##			Directive to setup upload location: Optional (*).
		}

##		error pages (must have defaults if ommited).
#		error_page   500 502 503 504  /50x.html;
##		setup is optional (*)
#		location = /50x.html {
#			root   html;
#		}

##		Optional 1 CGI, (bonus > 1, mandatory must be perfect). (*)
#		location ~ \.php$ {
#			root           html;
#			include        conf/fastcgi_params;
#			fastcgi_pass   127.0.0.1:9000;
#			fastcgi_index  index.php;
#			fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#		}
	}

	server
	{
#		set port
		listen			3491;

#		set server_names (or not);
		server_name		localhostB3491;

		location /
		{
			root   htmlB3491;
			index  index.html index.htm;

##			list of accepted methods. Optional (*)
#			if ( $request_method !~ ^(GET)$ ) { return 405; }
		}
	}

	server
	{
#		set port
		listen 3492;

##		(set server_names) or not, default = localhost;
##		server_name localhost-blabla; (commented on purpose)
	}

#	first server of localhost:3490 is above, so this is ignored.
#	conflicting name:port generates ignore warning on nginx.
	server
	{
		listen       3490;
		server_name  localhost;
	}

#	first server of localhost:3490 is above, so this is ignored.
#	conflicting name:port generates ignore warning on nginx.
	server
	{
		listen       3490;
	}

#	if called as :3490, this should be executed,
#	and not be captured by localhost:3490.
#	same name warning.
	server
	{
		listen		3490;
		server_name	localhostB3491;
	}

	server
	{
		listen		3493;

#		multiple server_name; free-bonus.
		server_name	local-redirect localhost;

#		optional redirect (*)
		return 301 http://localhost:3490;
	}
}

server
{
	listen			4242;

	location /
	{
		root html4242;
		index index.html index.html;
		if ( $request_method !~ ^(GET)$ ) { return 405; }

#		Optional on/off (*).
		autoindex on;
	}

	location /put_test/*
						 {
						 if ( $request_method !~ ^(PUT)$ ) { return 405; }
						 root html4242/uploads;
						 }
# Optional 1 CGI, (bonus > 1, mandatory must be perfect). (*)
location ~ \.bla$ {
root           html4242;
include        conf/fastcgi_params;
#			fastcgi_pass   127.0.0.1:9000;
#			fastcgi_index  index.php;
fastcgi_param  SCRIPT_FILENAME  /cgi_tester;
}
location /post_body
{
if ( $request_method !~ ^(POST)$ ) { return 405; }
# client_max_body_size works nested.
client_max_body_size	100;
}
location /directory/
{
if ( $request_method !~ ^(GET)$ ) { return 405; }
root	html4242/YoupiBanane;
index	youpi.bad_extension; 
}
}

